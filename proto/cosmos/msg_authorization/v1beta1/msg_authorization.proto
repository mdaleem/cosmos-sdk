syntax = "proto3";
package cosmos.msg_authorization.v1beta1;

option go_package = "github.com/cosmos/cosmos-sdk/x/msg_authorization/types";

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";


// GenericCapability grants the permission to execute any transaction of the provided
// sdk.Msg type without restrictions
message GenericCapability{
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters)  = false;
  option (cosmos_proto.implements_interface) = "CapabilityI";

  google.protobuf.Any msg = 1 [
      (cosmos_proto.accepts_interface) = "github.com/cosmos/cosmos-sdk/types.Msg",
      (gogoproto.moretags) = "yaml:\"msg_type\""
  ];
}

message CapabilityGrant{
  google.protobuf.Any capability = 1 [
      (cosmos_proto.accepts_interface) = "CapabilityI"
  ];
  int64 expiration = 2;
}

message SendCapability{
    option (gogoproto.equal) = true;
    option (gogoproto.goproto_getters)  = false;
    option (cosmos_proto.implements_interface) = "CapabilityI";

    repeated cosmos.base.v1beta1.Coin spend_limit = 1 [
        (gogoproto.nullable)     = false,
        (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
        (gogoproto.moretags) = "yaml:\"spend_limit\""
    ];
}
